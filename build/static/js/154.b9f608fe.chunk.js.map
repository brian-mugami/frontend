{"version":3,"file":"static/js/154.b9f608fe.chunk.js","mappings":"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","sources":["components/CustomerPaymentComponents/CustomerSearchPaymentForm.js","components/CustomerPaymentComponents/CustomerPaymentsResultList.js","pages/CustomerPaymentsPage/NewCustomerPaymentPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, useNavigate, useNavigation } from \"react-router-dom\";\r\nimport { defer, json, useLoaderData } from \"react-router-dom/dist/umd/react-router-dom.development\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction CustomerSearchPaymentForm({ onSearch }) {\r\n  const navigate = useNavigate();\r\n  const navigation = useNavigation();\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  const {customers} = useLoaderData()\r\n\r\n  const onSearchHandler = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    onSearch(searchName);\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    navigate(\"..\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Form id=\"search-form\" onSubmit={onSubmitHandler}>\r\n        <label>Search the customer</label>\r\n        <input\r\n          required\r\n          name=\"customer_name\"\r\n          type=\"text\"\r\n          list=\"options\"\r\n          placeholder=\"search customer\"\r\n          value={searchName}\r\n          onChange={onSearchHandler}\r\n        />\r\n        <datalist id=\"options\">\r\n          {customers.map((customer) => (\r\n            <option key={customer.id} value={customer.customer_name} />\r\n          ))}\r\n        </datalist>\r\n        <button\r\n          disabled={isSubmitting || searchName.length === 0}\r\n          type=\"submit\"\r\n          className=\"btn btn-success\"\r\n        >\r\n          {isSubmitting ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n        <button onClick={cancelHandler} type=\"button\" className=\"btn btn-dark\">\r\n          Cancel\r\n        </button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomerSearchPaymentForm;\r\n\r\nasync function customersLoader(){\r\n  const token = getAuthToken()\r\n  const response = await fetch(\"https://flask-inventory.onrender.com/customer\", {\r\n      method:\"get\",\r\n      headers:{\r\n          \"Authorization\": \"Bearer \"+ token\r\n      }\r\n  })\r\n  if(!response.ok){\r\n      throw json({message:\"Cant get customers\"}, {status:500})\r\n  }else{\r\n      const resData = await response.json()\r\n      return resData\r\n  };\r\n}\r\n\r\nexport async function loader (){\r\n  return(\r\n      defer({\r\n          customers: await customersLoader()\r\n      })\r\n  )}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CustomerPaymentsResultList({ results, customer }) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"max-w-screen-lg mx-auto\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Search results for \"{customer}\"</h2>\r\n        <div className=\"shadow border rounded-md\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Receipt Number\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Customer Name\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Receipt Date\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Accounted\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Payment Status\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Balance\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                >\r\n                  Paid\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {results.map((receipt) => (\r\n                <tr\r\n                  key={receipt.id}\r\n                  className=\"hover:bg-gray-100 transition-colors duration-200\"\r\n                >\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    <Link to={`/receipt/${receipt.id}`}>\r\n                      {receipt.receipt_number}\r\n                    </Link>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {receipt.customer.customer_name}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {receipt.date}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {receipt.accounted}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {receipt.status}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {receipt.customer_balance[0].balance}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {receipt.customer_balance[0].paid}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    <button className=\"btn btn-success\">\r\n                      <Link to={`/receipt/${receipt.id}/pay`}> Pay</Link>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomerPaymentsResultList;\r\n","import React, { useState } from \"react\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\nimport { json, useNavigate } from \"react-router-dom\";\r\nimport CustomerSearchPaymentForm from \"../../components/CustomerPaymentComponents/CustomerSearchPaymentForm\";\r\nimport CustomerPaymentsResultList from \"../../components/CustomerPaymentComponents/CustomerPaymentsResultList\";\r\n\r\nfunction NewCustomerPaymentPage() {\r\n  const [results, setResults] = useState([]);\r\n  const [cusName, setCusName] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  async function onSearch(customerName) {\r\n    const token = getAuthToken();\r\n    setCusName(customerName);\r\n    const response = await fetch(\r\n      \"https://flask-inventory.onrender.com/customer/payment/search/?customer_name=\" + customerName,\r\n      {\r\n        method: \"get\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n      }\r\n    );\r\n    if (response.status === 404) {\r\n      window.alert(\"No such customer is available. Please try again!!\");\r\n      navigate(\"./\");\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"No such request\" }, { status: 500 });\r\n    }\r\n    const resData = await response.json();\r\n    setResults(resData);\r\n    if (resData.length === 0) {\r\n      window.alert(\"That customer has no payments!!\");\r\n      navigate(\"./\");\r\n    }\r\n    return results;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <CustomerSearchPaymentForm onSearch={onSearch} />\r\n      {results && (\r\n        <CustomerPaymentsResultList results={results} customer={cusName} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewCustomerPaymentPage;\r\n"],"names":["customersLoader","token","getAuthToken","fetch","method","headers","response","ok","json","message","status","resData","loader","defer","customers","onSearch","navigate","useNavigate","navigation","useNavigation","useState","searchName","setSearchName","isSubmitting","state","useLoaderData","id","onSubmit","event","preventDefault","required","name","type","list","placeholder","value","onChange","target","map","customer","customer_name","disabled","length","className","onClick","results","scope","receipt","to","receipt_number","date","accounted","customer_balance","balance","paid","setResults","cusName","setCusName","customerName","Authorization","window","alert","CustomerSearchPaymentForm"],"sourceRoot":""}