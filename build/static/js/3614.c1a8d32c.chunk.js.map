{"version":3,"file":"static/js/3614.c1a8d32c.chunk.js","mappings":"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","sources":["components/PlaygroundComs/SalesCredit.js","components/PlaygroundComs/PurchaseCredit.js","components/UserComponents/PlayGround.js","pages/UserPages/Dashboard.js","../node_modules/@heroicons/react/24/outline/InformationCircleIcon.js"],"sourcesContent":["import React from 'react'\r\nimport { Card, Icon, List, ListItem, Title } from \"@tremor/react\";\r\nimport { InformationCircleIcon } from \"@heroicons/react/24/outline\";\r\n\r\n\r\n\r\n\r\nfunction SalesCredit( {receipts}) {\r\n  return (\r\n    <Card className=\"max-w-xs\">\r\n      <div className=\"flex  space-x-0 \">\r\n        <Title>Sales credit</Title>\r\n                        <Icon\r\n                          icon={InformationCircleIcon}\r\n                          variant=\"simple\"\r\n                          tooltip=\"Sales Credit\"\r\n                        />\r\n                      </div>\r\n    <List>\r\n      {receipts.map((receipt) => (\r\n        <ListItem key={receipt.customer_name}>\r\n          <span>{receipt.customer_name}</span>\r\n          <span>{receipt.total_balance.toLocaleString()}</span>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  </Card>\r\n  )\r\n}\r\n\r\nexport default SalesCredit","import React from 'react'\r\nimport { Card, List, ListItem, Title , Icon } from \"@tremor/react\";\r\nimport { InformationCircleIcon } from \"@heroicons/react/24/outline\";\r\n\r\n\r\n\r\n\r\nfunction PurchaseCredit({invoices}) {\r\n  return (\r\n    <Card className=\"max-w-xs\">\r\n            <div className=\"flex  space-x-0 \">\r\n\r\n    <Title>Purchase Credits</Title>\r\n    <Icon\r\n                          icon={InformationCircleIcon}\r\n                          variant=\"simple\"\r\n                          tooltip=\"Purchase Credit\"\r\n                        />\r\n                      </div>\r\n    <List>\r\n      {invoices.map((invoice) => (\r\n        <ListItem key={invoice.supplier_name}>\r\n          <span>{invoice.supplier_name}</span>\r\n          <span>{invoice.total_balance.toLocaleString()}</span>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  </Card>\r\n  )\r\n}\r\n\r\nexport default PurchaseCredit","import React, { useEffect, useState } from \"react\";\r\nimport { UserGroupIcon } from \"@heroicons/react/24/outline\";\r\n\r\nimport {\r\n  Card,\r\n  Metric,\r\n  AreaChart,\r\n  Text,\r\n  Title,\r\n  Flex,\r\n  BadgeDelta,\r\n  DeltaType,\r\n  BarList,\r\n  Color,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n} from \"@tremor/react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\nimport { defer, useRouteLoaderData } from \"react-router-dom/dist/umd/react-router-dom.development\";\r\nimport SalesCredit from \"../PlaygroundComs/SalesCredit\";\r\nimport PurchaseCredit from \"../PlaygroundComs/PurchaseCredit\";\r\n\r\nfunction PlayGround() {\r\n  const {\r\n    suppliers,\r\n    user,\r\n    sales,\r\n    purchases,\r\n    dailySales,\r\n    dailyPurchases,\r\n    dailyExpenses,\r\n    inventoryValue,\r\n    monthlySales,\r\n    monthlyPurchases,\r\n    purchaseCredit,\r\n    salesCredit,\r\n  } = useRouteLoaderData(\"root\");\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const updatedCategories = [\r\n      {\r\n        title: \"Total Sales Amount\",\r\n        metric: sales && sales.Amount ? sales.Amount.toLocaleString() : 0,\r\n        metricPrev: sales && sales.Sales ? sales.Sales.toLocaleString() : 0,\r\n        delta:\r\n          sales && sales.Percentage_sales\r\n            ? sales.Percentage_sales.toFixed(1)\r\n            : 0,\r\n        deltaType:\r\n          sales && sales.Percentage_sales\r\n            ? sales.Percentage_sales < 0\r\n              ? \"moderateDecrease\"\r\n              : \"moderateIncrease\"\r\n            : \"N/A\",\r\n      },\r\n      {\r\n        title: \"Total Purchase Amount\",\r\n        metric:\r\n          purchases && purchases.Amount ? purchases.Amount.toLocaleString() : 0,\r\n        metricPrev:\r\n          purchases && purchases.Purchases\r\n            ? purchases.Purchases.toLocaleString()\r\n            : 0,\r\n        delta:\r\n          purchases && purchases.Percentage_Purchase\r\n            ? purchases.Percentage_Purchase.toFixed(1)\r\n            : 0,\r\n        deltaType:\r\n          purchases && purchases.Percentage_Purchase\r\n            ? purchases.Percentage_Purchase < 0\r\n              ? \"moderateDecrease\"\r\n              : \"moderateIncrease\"\r\n            : \"N/A\",\r\n      },\r\n\r\n      {\r\n        title: \"Profit Today\",\r\n        metric: (sales.Amount - purchases.Amount).toLocaleString(),\r\n        metricPrev: purchases.Purchases.toLocaleString(),\r\n        delta: (\r\n          ((sales.Amount - purchases.Amount) / purchases.Amount) *\r\n          100\r\n        ).toFixed(1),\r\n        deltaType:\r\n          sales.Amount - purchases.Amount < 0\r\n            ? \"moderateDecrease\"\r\n            : \"moderateIncrease\",\r\n      },\r\n    ];\r\n    setCategories(updatedCategories);\r\n  }, [purchases, sales, dailySales]);\r\n\r\n  const salesHighlights = [\r\n    { name: \"Monday\", value: isNaN(dailySales.Monday) ? 0 : dailySales.Monday },\r\n    {\r\n      name: \"Tuesday\",\r\n      value: isNaN(dailySales.Tuesday) ? 0 : dailySales.Tuesday,\r\n    },\r\n    {\r\n      name: \"Wednesday\",\r\n      value: isNaN(dailySales.Wednesday) ? 0 : dailySales.Wednesday,\r\n    },\r\n    {\r\n      name: \"Thursday\",\r\n      value: isNaN(dailySales.Thursday) ? 0 : dailySales.Thursday,\r\n    },\r\n    { name: \"Friday\", value: isNaN(dailySales.Friday) ? 0 : dailySales.Friday },\r\n    {\r\n      name: \"Saturday\",\r\n      value: isNaN(dailySales.Saturday) ? 0 : dailySales.Saturday,\r\n    },\r\n    { name: \"Sunday\", value: isNaN(dailySales.Sunday) ? 0 : dailySales.Sunday },\r\n  ];\r\n\r\n  const purchaseHighlights = [\r\n    {\r\n      name: \"Monday\",\r\n      value: isNaN(dailyPurchases.Monday) ? 0 : dailyPurchases.Monday,\r\n    },\r\n    {\r\n      name: \"Tuesday\",\r\n      value: isNaN(dailyPurchases.Tuesday) ? 0 : dailyPurchases.Tuesday,\r\n    },\r\n    {\r\n      name: \"Wednesday\",\r\n      value: isNaN(dailyPurchases.Wednesday) ? 0 : dailyPurchases.Wednesday,\r\n    },\r\n    {\r\n      name: \"Thursday\",\r\n      value: isNaN(dailyPurchases.Thursday) ? 0 : dailyPurchases.Thursday,\r\n    },\r\n    {\r\n      name: \"Friday\",\r\n      value: isNaN(dailyPurchases.Friday) ? 0 : dailyPurchases.Friday,\r\n    },\r\n    {\r\n      name: \"Saturday\",\r\n      value: isNaN(dailyPurchases.Saturday) ? 0 : dailyPurchases.Saturday,\r\n    },\r\n    {\r\n      name: \"Sunday\",\r\n      value: isNaN(dailyPurchases.Sunday) ? 0 : dailyPurchases.Sunday,\r\n    },\r\n  ];\r\n\r\n  const expenseHighlights = [\r\n    {\r\n      name: \"Monday\",\r\n      value: isNaN(dailyExpenses.Monday) ? 0 : dailyExpenses.Monday,\r\n    },\r\n    {\r\n      name: \"Tuesday\",\r\n      value: isNaN(dailyExpenses.Tuesday) ? 0 : dailyExpenses.Tuesday,\r\n    },\r\n    {\r\n      name: \"Wednesday\",\r\n      value: isNaN(dailyExpenses.Wednesday) ? 0 : dailyExpenses.Wednesday,\r\n    },\r\n    {\r\n      name: \"Thursday\",\r\n      value: isNaN(dailyExpenses.Thursday) ? 0 : dailyExpenses.Thursday,\r\n    },\r\n    {\r\n      name: \"Friday\",\r\n      value: isNaN(dailyExpenses.Friday) ? 0 : dailyExpenses.Friday,\r\n    },\r\n    {\r\n      name: \"Saturday\",\r\n      value: isNaN(dailyExpenses.Saturday) ? 0 : dailyExpenses.Saturday,\r\n    },\r\n    {\r\n      name: \"Sunday\",\r\n      value: isNaN(dailyExpenses.Sunday) ? 0 : dailyExpenses.Sunday,\r\n    },\r\n  ];\r\n\r\n  const dummyData = [\r\n    monthlySales.daily_totals.map((dailyItem) => ({\r\n      date: dailyItem.day,\r\n      PurchasesPerMonth: dailyItem.total_amount,\r\n    })),\r\n  ];\r\n\r\n  const chartdata = monthlySales.daily_totals.map((salesItem, index) => ({\r\n    date: salesItem.day,\r\n    PurchasesPerMonth: monthlyPurchases.daily_totals[index].total_amount,\r\n    SalesPerMonth: salesItem.total_amount,\r\n  }));\r\n\r\n  const data = [\r\n    {\r\n      category: \"Weekly Sales\",\r\n      stat: isNaN(dailySales.total_sales_week)\r\n        ? 0\r\n        : dailySales.total_sales_week,\r\n      data: salesHighlights,\r\n    },\r\n    {\r\n      category: \"Weekly Purchases\",\r\n      stat: isNaN(dailyPurchases.total_purchases_week)\r\n        ? 0\r\n        : dailyPurchases.total_purchases_week,\r\n      data: purchaseHighlights,\r\n    },\r\n    {\r\n      category: \"Weekly Expenses\",\r\n      stat: isNaN(dailyExpenses.total_expenses_week)\r\n        ? 0\r\n        : dailyExpenses.total_expenses_week,\r\n      data: expenseHighlights,\r\n    },\r\n  ];\r\n\r\n  const deltaTypes = {\r\n    average: \"unchanged\",\r\n    overperforming: \"moderateIncrease\",\r\n    underperforming: \"moderateDecrease\",\r\n  };\r\n\r\n  const dataFormatter = (number) =>\r\n    Intl.NumberFormat(\"us\").format(number).toString();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pb-5\">\r\n        <header className=\"  \">\r\n          <div className=\"mx-auto max-w-7xl px-4 py-6 flex justify-between sm:px-6 lg:px-8\">\r\n            <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">\r\n              Welcome {user.first_name} {user.last_name}\r\n            </h1>\r\n          </div>\r\n        </header>\r\n      </div>\r\n\r\n      <Flex>\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-x-4\">\r\n          {categories.map((item) => (\r\n            <Card key={item.title}>\r\n              <Flex alignItems=\"start\">\r\n                <Text>{item.title}</Text>\r\n            \r\n              </Flex>\r\n              <Flex\r\n                justifyContent=\"start\"\r\n                alignItems=\"baseline\"\r\n                className=\"truncate space-x-3\"\r\n              >\r\n                <Metric>\r\n                  {item && item.metric\r\n                    ? `Ksh.${item.metric.toLocaleString()}`\r\n                    : \"N/A\"}\r\n                </Metric>\r\n                <Text className=\"truncate\">Transactions {item.metricPrev}</Text>\r\n              </Flex>\r\n            </Card>\r\n          ))}\r\n          <div className=\"flex pt-4\">\r\n        <div className=\"flex-start flex-initial \">\r\n          <Card\r\n            className=\"max-w-md mx-auto\"\r\n            decoration=\"top\"\r\n            decorationColor=\"indigo\"\r\n          >\r\n            <Text>Inventory value</Text>\r\n            <Metric>\r\n              {inventoryValue && inventoryValue.total_value\r\n                ? inventoryValue.total_value.toLocaleString()\r\n                : 0}\r\n            </Metric>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n        </div>\r\n      </Flex>\r\n\r\n      <div>\r\n     \r\n      </div>\r\n\r\n      <div className=\"pt-10\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-x-4\">\r\n          {data.map((item) => (\r\n            <Card key={item.category}>\r\n              <Title>{item.category}</Title>\r\n              <Flex\r\n                justifyContent=\"start\"\r\n                alignItems=\"baseline\"\r\n                className=\"space-x-2\"\r\n              >\r\n                <Metric>{item && item.stat.toLocaleString()}</Metric>\r\n                <Text>Total Amount</Text>\r\n              </Flex>\r\n              <Flex className=\"mt-6\">\r\n                <Text>Days</Text>\r\n                <Text className=\"text-right\">Amount</Text>\r\n              </Flex>\r\n              <BarList\r\n                data={item.data}\r\n                valueFormatter={dataFormatter}\r\n                className=\"mt-2\"\r\n              />\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      <div className=\" pt-4\">\r\n        <Card>\r\n          <Title>Monthly data</Title>\r\n          <AreaChart\r\n            className=\"h-72 mt-4\"\r\n            data={chartdata}\r\n            index=\"date\"\r\n            categories={[\"PurchasesPerMonth\", \"SalesPerMonth\"]}\r\n            colors={[\"indigo\", \"cyan\"]}\r\n            valueFormatter={dataFormatter}\r\n          />\r\n        </Card>\r\n      </div>\r\n      <div className=\"p-4 grid grid-cols-3 gap-4\">\r\n        <SalesCredit receipts={salesCredit} />\r\n        <PurchaseCredit invoices={purchaseCredit} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayGround;\r\n","import React from \"react\";\r\nimport PlayGround from \"../../components/UserComponents/PlayGround\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n   \r\n      <PlayGround />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","const React = require(\"react\");\n\nfunction InformationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(InformationCircleIcon);\nmodule.exports = ForwardRef;"],"names":["receipts","className","icon","InformationCircleIcon","variant","tooltip","map","receipt","customer_name","total_balance","toLocaleString","invoices","invoice","supplier_name","useRouteLoaderData","user","suppliers","sales","purchases","dailySales","dailyPurchases","dailyExpenses","inventoryValue","monthlySales","monthlyPurchases","purchaseCredit","salesCredit","useState","categories","setCategories","useEffect","updatedCategories","title","metric","Amount","metricPrev","Sales","delta","Percentage_sales","toFixed","deltaType","Purchases","Percentage_Purchase","salesHighlights","name","value","isNaN","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","purchaseHighlights","expenseHighlights","chartdata","daily_totals","dailyItem","date","day","PurchasesPerMonth","total_amount","salesItem","index","SalesPerMonth","data","category","stat","total_sales_week","total_purchases_week","total_expenses_week","dataFormatter","number","Intl","NumberFormat","format","toString","first_name","last_name","item","alignItems","justifyContent","decoration","decorationColor","total_value","valueFormatter","colors","React","require","ForwardRef","forwardRef","svgRef","titleId","props","createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","module","exports"],"sourceRoot":""}