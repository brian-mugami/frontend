{"version":3,"file":"static/js/971.dcd59b7e.chunk.js","mappings":"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","sources":["components/CustomerPaymentComponents/CustomerSearchPaymentForm.js","components/CustomerPaymentComponents/CustomerPaymentsResultList.js","pages/CustomerPaymentsPage/NewCustomerPaymentPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form, useNavigate, useNavigation } from \"react-router-dom\";\n\nfunction CustomerSearchPaymentForm({ onSearch }) {\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const [searchName, setSearchName] = useState(\"\");\n  const isSubmitting = navigation.state === \"submitting\";\n\n  const onSearchHandler = (event) => {\n    setSearchName(event.target.value);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    onSearch(searchName);\n  };\n\n  const cancelHandler = () => {\n    navigate(\"..\");\n  };\n  return (\n    <React.Fragment>\n      <Form id=\"search-form\" onSubmit={onSubmitHandler}>\n        <label>Search the customer</label>\n        <input\n          required\n          name=\"customer_name\"\n          type=\"text\"\n          placeholder=\"search customer\"\n          value={searchName}\n          onChange={onSearchHandler}\n        />\n        <button\n          disabled={isSubmitting || searchName.length === 0}\n          type=\"submit\"\n          className=\"btn btn-success\"\n        >\n          {isSubmitting ? \"Searching...\": \"Search\"}\n        </button>\n        <button onClick={cancelHandler} type=\"button\" className=\"btn btn-dark\">\n          Cancel\n        </button>\n      </Form>\n    </React.Fragment>\n  );\n}\n\nexport default CustomerSearchPaymentForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CustomerPaymentsResultList({ results, customer }) {\n  return (\n    <React.Fragment>\n      <div className=\"max-w-screen-lg mx-auto\">\n        <h2 className=\"text-lg font-semibold mb-4\">Search results for \"{customer}\"</h2>\n        <div className=\"shadow border rounded-md\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Receipt Number\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Customer Name\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Receipt Date\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Accounted\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Payment Status\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Balance\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Paid\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {results.map((receipt) => (\n                <tr\n                  key={receipt.id}\n                  className=\"hover:bg-gray-100 transition-colors duration-200\"\n                >\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <Link to={`/receipt/${receipt.id}`}>\n                      {receipt.receipt_number}\n                    </Link>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {receipt.customer.customer_name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {receipt.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {receipt.accounted}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {receipt.status}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {receipt.customer_balance[0].balance}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {receipt.customer_balance[0].paid}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <button className=\"btn btn-success\">\n                      <Link to={`/receipt/${receipt.id}/payment`}> Pay</Link>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default CustomerPaymentsResultList;\n","import React, { useState } from \"react\";\nimport { getAuthToken } from \"../../util/Auth\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport CustomerSearchPaymentForm from \"../../components/CustomerPaymentComponents/CustomerSearchPaymentForm\";\nimport CustomerPaymentsResultList from \"../../components/CustomerPaymentComponents/CustomerPaymentsResultList\";\n\nfunction NewCustomerPaymentPage() {\n  const [results, setResults] = useState([]);\n  const [cusName, setCusName] = useState(\"\");\n  const navigate = useNavigate();\n\n  async function onSearch(customerName) {\n    const token = getAuthToken();\n    setCusName(customerName);\n    const response = await fetch(\n      \"/customer/payment/search/?customer_name=\" + customerName,\n      {\n        method: \"get\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      }\n    );\n    if (response.status === 404) {\n      window.alert(\"No such customer is available. Please try again!!\");\n      navigate(\"./\");\n    }\n    if (!response.ok) {\n      throw json({ message: \"No such request\" }, { status: 500 });\n    }\n    const resData = await response.json();\n    setResults(resData);\n    if (resData.length === 0) {\n      window.alert(\"That customer has no  payments!!\");\n      navigate(\"./\");\n    }\n    return results;\n  }\n  return (\n    <React.Fragment>\n      <CustomerSearchPaymentForm onSearch={onSearch} />\n      {results && (\n        <CustomerPaymentsResultList results={results} customer={cusName} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default NewCustomerPaymentPage;\n"],"names":["onSearch","navigate","useNavigate","navigation","useNavigation","useState","searchName","setSearchName","isSubmitting","state","id","onSubmit","event","preventDefault","required","name","type","placeholder","value","onChange","target","disabled","length","className","onClick","results","customer","scope","map","receipt","to","receipt_number","customer_name","date","accounted","status","customer_balance","balance","paid","setResults","cusName","setCusName","customerName","token","getAuthToken","fetch","method","headers","Authorization","response","window","alert","ok","json","message","resData"],"sourceRoot":""}