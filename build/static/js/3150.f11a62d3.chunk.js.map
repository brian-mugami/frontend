{"version":3,"file":"static/js/3150.f11a62d3.chunk.js","mappings":"uPAyDyC,SAE1BA,IAAkB,OAAH,qCAc7B,OAd6B,0BAA9B,6FAC8B,OAAtBC,GAAQC,EAAAA,EAAAA,gBAAc,SACLC,MAAM,qDAAsD,CAC/EC,OAAO,MACPC,QAAQ,CACJ,cAAiB,UAAWJ,KAElC,OALY,IAARK,EAAQ,QAMDC,GAAG,CAAC,EAAF,mBACLC,EAAAA,EAAAA,MAAK,CAACC,QAAQ,sBAAuB,CAACC,OAAO,MAAK,wBAElCJ,EAASE,OAAM,QAAxB,OAAPG,EAAO,yBACNA,GAAO,QAChB,6CACH,sBAEM,SAAeC,IAAM,+BAKxB,8CALG,mFAEI,OAFJ,KAEDC,EAAAA,MAAK,SACgBb,IAAiB,OAAzB,OAAyB,kBAAlCc,UAAU,EAAD,kFAEf,sBAvBJ,UApDA,SAAmC,GAAe,IAAbC,EAAQ,EAARA,SAC7BC,GAAWC,EAAAA,EAAAA,eACXC,GAAaC,EAAAA,EAAAA,iBACnB,GAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAC1BC,EAAoC,eAArBL,EAAWM,MACzBV,GAAaW,EAAAA,EAAAA,iBAAbX,UAcP,OACE,SAAC,WAAc,WACb,UAAC,KAAI,CAACY,GAAG,cAAcC,SAVH,SAACC,GACvBA,EAAMC,iBACNd,EAASM,EACX,EAOqD,WAC/C,2BAAO,yBACP,kBACES,UAAQ,EACRC,KAAK,gBACLC,KAAK,OACLC,KAAK,UACLC,YAAY,kBACZC,MAAOd,EACPe,SAvBgB,SAACR,GACvBN,EAAcM,EAAMS,OAAOF,MAC7B,KAuBM,qBAAUT,GAAG,UAAS,SACnBZ,EAAUwB,KAAI,SAACC,GAAQ,OACtB,mBAA0BJ,MAAOI,EAASC,eAA7BD,EAASb,GAAqC,OAG/D,mBACEe,SAAUlB,GAAsC,IAAtBF,EAAWqB,OACrCV,KAAK,SACLW,UAAU,kBAAiB,SAE1BpB,EAAe,eAAiB,YAEnC,mBAAQqB,QA5BQ,WACpB5B,EAAS,KACX,EA0BsCgB,KAAK,SAASW,UAAU,eAAc,SAAC,eAM/E,C","sources":["components/CustomerPaymentComponents/CustomerSearchPaymentForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, useNavigate, useNavigation } from \"react-router-dom\";\r\nimport { defer, json, useLoaderData } from \"react-router-dom/dist/umd/react-router-dom.development\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction CustomerSearchPaymentForm({ onSearch }) {\r\n  const navigate = useNavigate();\r\n  const navigation = useNavigation();\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  const {customers} = useLoaderData()\r\n\r\n  const onSearchHandler = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    onSearch(searchName);\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    navigate(\"..\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Form id=\"search-form\" onSubmit={onSubmitHandler}>\r\n        <label>Search the customer</label>\r\n        <input\r\n          required\r\n          name=\"customer_name\"\r\n          type=\"text\"\r\n          list=\"options\"\r\n          placeholder=\"search customer\"\r\n          value={searchName}\r\n          onChange={onSearchHandler}\r\n        />\r\n        <datalist id=\"options\">\r\n          {customers.map((customer) => (\r\n            <option key={customer.id} value={customer.customer_name} />\r\n          ))}\r\n        </datalist>\r\n        <button\r\n          disabled={isSubmitting || searchName.length === 0}\r\n          type=\"submit\"\r\n          className=\"btn btn-success\"\r\n        >\r\n          {isSubmitting ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n        <button onClick={cancelHandler} type=\"button\" className=\"btn btn-dark\">\r\n          Cancel\r\n        </button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomerSearchPaymentForm;\r\n\r\nasync function customersLoader(){\r\n  const token = getAuthToken()\r\n  const response = await fetch(\"https://inventory-accounting.onrender.com/customer\", {\r\n      method:\"get\",\r\n      headers:{\r\n          \"Authorization\": \"Bearer \"+ token\r\n      }\r\n  })\r\n  if(!response.ok){\r\n      throw json({message:\"Cant get customers\"}, {status:500})\r\n  }else{\r\n      const resData = await response.json()\r\n      return resData\r\n  };\r\n}\r\n\r\nexport async function loader (){\r\n  return(\r\n      defer({\r\n          customers: await customersLoader()\r\n      })\r\n  )}"],"names":["customersLoader","token","getAuthToken","fetch","method","headers","response","ok","json","message","status","resData","loader","defer","customers","onSearch","navigate","useNavigate","navigation","useNavigation","useState","searchName","setSearchName","isSubmitting","state","useLoaderData","id","onSubmit","event","preventDefault","required","name","type","list","placeholder","value","onChange","target","map","customer","customer_name","disabled","length","className","onClick"],"sourceRoot":""}