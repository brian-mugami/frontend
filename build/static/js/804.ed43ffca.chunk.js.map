{"version":3,"file":"static/js/804.ed43ffca.chunk.js","mappings":"4LA6EA,UAxEA,WACI,OAAwCA,EAAAA,EAAAA,UAAS,MAAK,eAA/CC,EAAY,KAAEC,EAAe,KAC9BC,GAAWC,EAAAA,EAAAA,eAGXC,EAAoC,gBAFvBC,EAAAA,EAAAA,iBAEaC,MAM1BC,EAAY,yCAAG,WAAOC,GAAK,gFAKO,OAJtCA,EAAMC,iBACAC,GAAQC,EAAAA,EAAAA,OAERC,EAAW,IAAIC,UACZC,OAAO,OAAQd,GAAc,kBAGbe,MAAM,oBAAqB,CAChDC,OAAQ,OACRC,QAAS,CACPC,cAAe,UAAYR,GAE7BS,KAAMP,IACL,KAAD,EACsB,OAPlBQ,EAAQ,QAODC,QACXC,OAAOC,MAAMH,EAASI,SAEA,MAApBJ,EAASC,QACXC,OAAOC,MAAMH,EAASI,SAEpBJ,EAASK,GACOH,OAAOI,QAAQ,kCAE/BxB,EAAS,SAGXoB,OAAOC,MAAM,oBACd,kDAEDD,OAAOC,MAAM,gBAAgB,EAAD,IAAS,0DAExC,gBAhCiB,sCAkClB,OACE,UAAC,WAAc,YACb,wBAAI,sBACJ,iBAAMI,SAAUpB,EAAa,UAC3B,4BACE,kBACEqB,KAAK,OACLC,OAAO,QACPC,UAAQ,EACRC,SA/Ce,SAACvB,GACxBP,EAAgBO,EAAMwB,OAAOC,MAAM,GACrC,EA8CUC,KAAK,OACLC,GAAG,mBACHC,UAAU,kBAEZ,mBACEA,UAAU,kBACVR,KAAK,SACLS,SAAUjC,EAAa,SAEtBA,EAAe,aAAe,kBAM7C,C","sources":["pages/UploadPages/InventoryUpload.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useNavigate, useNavigation } from 'react-router-dom/dist/umd/react-router-dom.development';\r\nimport { getAuthToken } from '../../util/Auth';\r\n\r\nfunction InventoryUpload() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const navigate = useNavigate();\r\n    const navigation = useNavigation();\r\n  \r\n    const isSubmitting = navigation.state === \"submitting\";\r\n  \r\n    const handleFileChange = (event) => {\r\n      setSelectedFile(event.target.files[0]);\r\n    };\r\n  \r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      const token = getAuthToken();\r\n  \r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n  \r\n      try {\r\n        const response = await fetch(\"/inventory/upload\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n          body: formData,\r\n        });\r\n        if (response.status === 400) {\r\n          window.alert(response.message);\r\n        }\r\n        if (response.status === 500) {\r\n          window.alert(response.message);\r\n        }\r\n        if (response.ok) {\r\n          const confirmed = window.confirm(\"Items uploaded successfully!!\");\r\n          if (confirmed) {\r\n            navigate(\"/home\");\r\n          }\r\n        } else {\r\n          window.alert(\"failed to upload\");\r\n        }\r\n      } catch (error) {\r\n        window.alert(\"Network error\", error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <h1>Inventory Upload</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx\"\r\n              required\r\n              onChange={handleFileChange}\r\n              name=\"file\"\r\n              id=\"formFileMultiple\"\r\n              className=\"form-control\"\r\n            />\r\n            <button\r\n              className=\"btn btn-success\"\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? \"Submitting\" : \"Submit\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default InventoryUpload"],"names":["useState","selectedFile","setSelectedFile","navigate","useNavigate","isSubmitting","useNavigation","state","handleSubmit","event","preventDefault","token","getAuthToken","formData","FormData","append","fetch","method","headers","Authorization","body","response","status","window","alert","message","ok","confirm","onSubmit","type","accept","required","onChange","target","files","name","id","className","disabled"],"sourceRoot":""}