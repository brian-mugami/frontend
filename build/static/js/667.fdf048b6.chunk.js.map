{"version":3,"file":"static/js/667.fdf048b6.chunk.js","mappings":"qOAiEO,SAAeA,EAAO,GAAD,+BA8B3B,8CA9BM,wGAGgE,OAHxCC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAChCC,GAAQC,EAAAA,EAAAA,MACRC,EAAKH,EAAOG,GACZC,EAAM,qDAAuDD,EAAG,EAAD,OAElDJ,EAAQM,WAAU,OAIpC,OAJKC,EAAI,OAEJC,EAAW,CACfC,OAAQF,EAAKG,IAAI,WAClB,UACsBC,MAAMN,EAAK,CAChCO,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAYZ,EAC3B,8BAA+B,KAEjCa,KAAMC,KAAKC,UAAUT,KACpB,KAAD,GARY,GAUU,OAVlBU,EAAQ,QAUDC,OAAc,0CAClBD,GAAQ,WAEO,MAApBA,EAASC,OAAc,0CAClBD,GAAQ,WAEZA,EAASE,GAAG,CAAD,sBACRC,EAAAA,EAAAA,MAAK,CAAEC,QAAS,0BAA4B,CAAEH,OAAQ,MAAO,KAAD,6BAE7DI,EAAAA,EAAAA,UAAS,aAAW,6CAC5B,sBAhCD,UAnDA,SAAyB,GAAc,IAAZC,EAAO,EAAPA,QACnBC,GAAaC,EAAAA,EAAAA,iBACbC,GAAWC,EAAAA,EAAAA,eACXrB,GAAOsB,EAAAA,EAAAA,iBAEPC,EAAoC,eAArBL,EAAWM,MAIhC,OACE,UAAC,IAAK,WACHxB,GAAQA,EAAKyB,SACZ,wBACGC,OAAOC,OAAO3B,EAAKyB,QAAQG,KAAI,SAACC,GAAG,OAClC,wBAAeA,GAANA,EAAe,MAI7B7B,GAAQA,EAAKe,UAAW,uBAAIf,EAAKe,WAClC,UAAC,EAAAe,KAAI,CAACzB,OAAO,OAAM,WACjB,gBAAK0B,UAAU,OAAM,UACrB,eAAGA,UAAU,uCAAsC,UAAC,+CACL,KAC7C,uBAAId,EAAQe,iBAAmB,aAAW,KAC1C,yBACGf,EAAQgB,SAAS,IAAEhB,EAAQiB,gBAIhC,gBAAKH,UAAU,OAAM,UACnB,kBAAOI,UAAQ,EAACC,YAAY,cAAcC,KAAK,SAASN,UAAU,oNAEpE,iBAAKA,UAAU,YAAW,WAC1B,mBACIA,UAAU,kNACVO,KAAK,SACPC,SAAUhB,EAAa,SAEtBA,EAAe,UAAY,UAE9B,mBACIQ,UAAU,gDACVS,QApCV,WACEpB,EAAS,KACX,EAkCiC,SAAC,WAElB,YAKlB,C,+EChDA,UATA,WACI,IAAMH,GAAUwB,EAAAA,EAAAA,oBAAmB,kBACrC,OACE,SAAC,WAAc,WACX,SAAC,UAAe,CAACxB,QAASA,KAGlC,C","sources":["components/InvoiceComponents/InvoiceVoidForm.js","pages/InvoicePages/InvoiceVoidPage.js"],"sourcesContent":["import React from \"react\";\r\nimport Modal from \"../UIComponents/Modal\";\r\nimport {\r\n  Form,\r\n  json,\r\n  redirect,\r\n  useActionData,\r\n  useNavigate,\r\n  useNavigation,\r\n} from \"react-router-dom/dist/umd/react-router-dom.development\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction InvoiceVoidForm({ invoice }) {\r\n  const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n  const data = useActionData();\r\n\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  function cancelHandler() {\r\n    navigate(\"..\");\r\n  }\r\n  return (\r\n    <Modal>\r\n      {data && data.errors && (\r\n        <ul>\r\n          {Object.values(data.errors).map((err) => (\r\n            <li key={err}>{err}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {data && data.message && <p>{data.message}</p>}\r\n      <Form method=\"post\">\r\n        <div className=\"pb-4\">\r\n        <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n          Are you sure you want to void invoice number{\" \"}\r\n          <b>{invoice.invoice_number}</b> of amount{\" \"}\r\n          <b>\r\n            {invoice.currency} {invoice.amount}\r\n          </b>\r\n          </p>\r\n        </div>\r\n        <div className=\"pb-2\">\r\n          <input required placeholder=\"Void Reason\" name=\"reason\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 placeholder:px-4 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"></input>\r\n        </div>\r\n        <div className=\"space-x-4\">\r\n        <button\r\n            className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n            type=\"submit\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {isSubmitting ? \"Voiding\" : \"Void\"}\r\n        </button>\r\n        <button \r\n            className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n            onClick={cancelHandler}>\r\n          Cancel\r\n        </button>{\" \"}\r\n        </div>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default InvoiceVoidForm;\r\n\r\nexport async function action({ request, params }) {\r\n  const token = getAuthToken();\r\n  const id = params.id;\r\n  const url = \"https://flask-inventory.onrender.com/invoice/void/\" + id;\r\n\r\n  const data = await request.formData()\r\n\r\n  const voidData = {\r\n    reason: data.get('reason')\r\n  }\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    body: JSON.stringify(voidData)\r\n  });\r\n\r\n  if (response.status === 400) {\r\n    return response;\r\n  }\r\n  if (response.status === 404) {\r\n    return response;\r\n  }\r\n  if (!response.ok) {\r\n    throw json({ message: \"Failed to void invoice\" }, { status: 500 });\r\n  }\r\n  return redirect(\"/invoice\");\r\n}\r\n","import React from 'react'\r\nimport InvoiceVoidForm from '../../components/InvoiceComponents/InvoiceVoidForm'\r\nimport { useRouteLoaderData } from 'react-router-dom/dist/umd/react-router-dom.development'\r\n\r\nfunction InvoiceVoidPage() {\r\n    const invoice = useRouteLoaderData(\"invoice-detail\")\r\n  return (\r\n    <React.Fragment>\r\n        <InvoiceVoidForm invoice={invoice}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InvoiceVoidPage"],"names":["action","request","params","token","getAuthToken","id","url","formData","data","voidData","reason","get","fetch","method","headers","Authorization","body","JSON","stringify","response","status","ok","json","message","redirect","invoice","navigation","useNavigation","navigate","useNavigate","useActionData","isSubmitting","state","errors","Object","values","map","err","Form","className","invoice_number","currency","amount","required","placeholder","name","type","disabled","onClick","useRouteLoaderData"],"sourceRoot":""}