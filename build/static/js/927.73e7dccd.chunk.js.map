{"version":3,"file":"static/js/927.73e7dccd.chunk.js","mappings":"4OAsEO,SAAeA,EAAO,GAAD,+BAsB3B,8CAtBM,kGAGuB,OAHCC,EAAM,EAANA,OAAe,EAAPC,QAC/BC,EAAKF,EAAOE,GACR,yDACJC,GAAQC,EAAAA,EAAAA,MAAe,EAAD,OACLC,MAFb,yDAEyBH,EAAK,WAAY,CAClDI,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYL,EAC3B,8BAA+B,OAEhC,KAAD,EANY,GAOU,OAPlBM,EAAQ,QAODC,OAAc,yCAClBD,GAAQ,UAEO,MAApBA,EAASC,OAAc,0CAClBD,GAAQ,WAEZA,EAASE,GAAG,CAAD,sBACRC,EAAAA,EAAAA,MAAK,CAAEC,QAAS,yBAA2B,CAAEH,OAAQ,MAAO,KAAD,oBAE7CD,EAASG,OAAO,KAAD,GAAxB,OAAPE,EAAO,yBACNA,EAAQC,WAAW,IAAE,6CAC7B,sBAxBD,UA1DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,eACXC,GAAOC,EAAAA,EAAAA,iBAKPJ,GAAaK,EAAAA,EAAAA,iBACnB,OACE,SAAC,WAAc,WACb,UAAC,IAAK,YACJ,eAAIC,UAAU,kDAAiD,SAAC,kBAGhE,eAAGA,UAAU,uCAAsC,UAAC,0CACV,OAEzCH,GAAQA,EAAKI,SACZ,wBACGC,OAAOC,OAAON,EAAKI,QAAQG,KAAI,SAACC,GAAG,OAClC,wBAAeA,GAANA,EAAe,MAI7BR,GAAQA,EAAKL,UAAW,uBAAIK,EAAKL,WAClC,4BACE,eAAGQ,UAAU,uCAAsC,UAAC,kBAClC,KAChB,8BACGN,EAAWY,gBACZ,oBAAa,KAAC,qBACd,cAAGN,UAAU,gBAAe,SAAEN,EAAWa,uBAG7C,eAAGP,UAAU,uCAAsC,UAAC,iBACnC,KACf,8BACGN,EAAWc,eACZ,oBAAa,KAAC,oBAAc,KAC5B,eAAGR,UAAU,gBAAe,UAAC,IAAEN,EAAWe,uBAG9C,gBAAKT,UAAU,6CAA4C,UACzD,mBACEU,KAAK,SACLC,QA1CZ,WACEhB,EAAS,oBACX,EAyCYK,UAAU,gDAA+C,SAC1D,oBASb,C","sources":["pages/CustomerPaymentsPage/CustomerPaymentAccountingViewPage.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  json,\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport Modal from \"../../components/UIComponents/Modal\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction CustomerPaymentAccountingViewPage() {\r\n  const navigate = useNavigate();\r\n  const data = useActionData();\r\n  function cancelHandler() {\r\n    navigate(\"/customer-payment\");\r\n  }\r\n\r\n  const accounting = useLoaderData();\r\n  return (\r\n    <React.Fragment>\r\n      <Modal>\r\n        <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n          Transactions\r\n        </h2>\r\n        <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n          These are the transactions that occured{\" \"}\r\n        </p>\r\n        {data && data.errors && (\r\n          <ul>\r\n            {Object.values(data.errors).map((err) => (\r\n              <li key={err}>{err}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {data && data.message && <p>{data.message}</p>}\r\n        <div>\r\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n            Credit Account:{\" \"}\r\n            <strong>\r\n              {accounting.credit_account}\r\n              <span></span> <span></span>\r\n              <p className=\"font-semibold\">{accounting.credit_amount}</p>\r\n            </strong>\r\n          </p>\r\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n            Debit Account:{\" \"}\r\n            <strong>\r\n              {accounting.debit_account}\r\n              <span></span> <span></span>{\" \"}\r\n              <p className=\"font-semibold\"> {accounting.debit_amount}</p>\r\n            </strong>\r\n          </p>\r\n          <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={cancelHandler}\r\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomerPaymentAccountingViewPage;\r\n\r\nexport async function loader({ params, request }) {\r\n  const id = params.id;\r\n  let url = \"https://flask-inventory.onrender.com/customer/payment/\";\r\n  const token = getAuthToken();\r\n  const response = await fetch(url + id + \"/account\", {\r\n    method: \"get\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  });\r\n  if (response.status === 404) {\r\n    return response;\r\n  }\r\n  if (response.status === 400) {\r\n    return response;\r\n  }\r\n  if (!response.ok) {\r\n    throw json({ message: \"Not gotten accounting\" }, { status: 404 });\r\n  }\r\n  const resData = await response.json();\r\n  return resData.accounting[0];\r\n}\r\n"],"names":["loader","params","request","id","token","getAuthToken","fetch","method","headers","Authorization","response","status","ok","json","message","resData","accounting","navigate","useNavigate","data","useActionData","useLoaderData","className","errors","Object","values","map","err","credit_account","credit_amount","debit_account","debit_amount","type","onClick"],"sourceRoot":""}