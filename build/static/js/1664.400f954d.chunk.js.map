{"version":3,"file":"static/js/1664.400f954d.chunk.js","mappings":"wQAqDyC,SAExBA,EAAY,GAAD,4CAkBzB,OAlByB,0BAA1B,WAA2BC,GAAE,gFACC,OAAtBC,GAAQC,EAAAA,EAAAA,gBAAe,EAAD,OACLC,MAAM,0EAA4EH,EAAI,CAC3GI,QAAS,CACPC,cAAe,UAAYJ,EAC3B,8BAA+B,OAGhC,KAAD,EANY,IAARK,EAAQ,QAOAC,GAAG,CAAD,qBACRC,EAAAA,EAAAA,MACJ,CAAEC,QAAS,gDACX,CAAEC,OAAQ,MACV,KAAD,mBAEqBJ,EAASE,OAAO,KAAD,GAAxB,OAAPG,EAAO,yBACNA,GAAO,6CAEjB,sBAEM,SAAeC,EAAO,GAAD,+BAK3B,8CALM,4FAEO,OAFwB,EAAPC,QAASC,EAAM,EAANA,OAChCd,EAAKc,EAAOd,GAAG,EAAD,GACbe,EAAAA,MAAK,SACKhB,EAAYC,GAAG,OAAvB,OAAuB,kBAA9BgB,QAAQ,EAAD,kFAEV,sBAEM,SAAeC,EAAO,GAAD,+BAkB3B,8CAlBM,gGAEe,OAFSJ,EAAO,EAAPA,QAASC,EAAM,EAANA,OAChCb,GAAQC,EAAAA,EAAAA,gBACRF,EAAKc,EAAOd,GAAG,EAAD,OACGG,MAAM,0EAA4EH,EAAI,CAC3GkB,OAAQL,EAAQK,OAChBd,QAAS,CACPC,cAAe,UAAYJ,KAE5B,KAAD,EALY,UAMAM,GAAG,CAAD,qBACRC,EAAAA,EAAAA,MACJ,CAAEC,QAAS,6BACX,CACEC,OAAQ,MAEV,KAAD,4BAEIS,EAAAA,EAAAA,UAAS,qBAAmB,4CACpC,sBA/CD,UA1CA,WACE,IAAQH,GAAYI,EAAAA,EAAAA,oBAAmB,0BAA/BJ,QAER,OACE,SAAC,WAAc,WACb,SAAC,EAAAK,SAAQ,CAACC,UAAW,oBACvBC,KAAK,SACLC,UAAU,mFACVC,UAAQ,aAER,iBACED,UAAU,uCACVE,MAAM,6BACNC,KAAK,OACLC,QAAQ,YAAW,WAEnB,mBACEJ,UAAU,aACVK,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAO,eACPC,YAAY,OAEd,iBACET,UAAU,aACVG,KAAK,eACLO,EAAE,0MAEA,mBAEE,UACJ,SAAC,EAAAC,MAAK,CAACC,QAASpB,EAAQ,SACrB,SAACqB,GAAa,OACb,SAAC,IAAW,CAACrB,QAASqB,EAAeC,MAAM,wBAAyB,OAMhF,C","sources":["pages/InventoryAdjustmentAccountPages/InvAdjAccountDetailPage.js"],"sourcesContent":["import {\r\n    Await,\r\n    defer,\r\n    json,\r\n    redirect,\r\n    useRouteLoaderData,\r\n  } from \"react-router-dom\";\r\n  import React, { Suspense } from \"react\";\r\n  import Accountitem from \"../../components/AccountComponents/AccountItem\";\r\n  import { getAuthToken } from \"../../util/Auth\";\r\n  \r\n  function InvAdjAccountDetailPage() {\r\n    const { account } = useRouteLoaderData(\"inv-adj-account-detail\");\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <Suspense fallback={ <button\r\n      type=\"button\"\r\n      className=\"bg-indigo-500 text-white px-4 py-2 rounded-full flex items-center justify-center\"\r\n      disabled\r\n    >\r\n      <svg\r\n        className=\"animate-spin h-5 w-5 mr-3 text-white\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <circle\r\n          className=\"opacity-25\"\r\n          cx=\"12\"\r\n          cy=\"12\"\r\n          r=\"10\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"4\"\r\n        ></circle>\r\n        <path\r\n          className=\"opacity-75\"\r\n          fill=\"currentColor\"\r\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.373A8 8 0 0112 4.001V0c-4.418 0-8 3.582-8 7.999h4zM12 20.001a8 8 0 01-8-8h-4c0 4.417 3.582 8 8 8v-4zm0-16.002a8 8 0 018 8h4c0-4.418-3.582-8-8-8v4z\"\r\n        ></path>\r\n      </svg>\r\n      Processing...\r\n    </button>}>\r\n          <Await resolve={account}>\r\n            {(loadedAccount) => (\r\n              <Accountitem account={loadedAccount} title=\"Inventory Adjustment\" />\r\n            )}\r\n          </Await>\r\n        </Suspense>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  export default InvAdjAccountDetailPage;\r\n  \r\n  async function loadAccount(id) {\r\n    const token = getAuthToken();\r\n    const response = await fetch(\"https://inventory-accounting.onrender.com/inventory-adjustment/account/\" + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw json(\r\n        { message: \"Could not fetch inventory adjustment account\" },\r\n        { status: 500 }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n      return resData;\r\n    }\r\n  }\r\n  \r\n  export async function loader({ request, params }) {\r\n    const id = params.id;\r\n    return defer({\r\n      account: await loadAccount(id),\r\n    });\r\n  }\r\n  \r\n  export async function action({ request, params }) {\r\n    const token = getAuthToken();\r\n    const id = params.id;\r\n    const response = await fetch(\"https://inventory-accounting.onrender.com/inventory-adjustment/account/\" + id, {\r\n      method: request.method,\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw json(\r\n        { message: \"Could not delete account.\" },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    }\r\n    return redirect(\"/account/inv-adj\");\r\n  }"],"names":["loadAccount","id","token","getAuthToken","fetch","headers","Authorization","response","ok","json","message","status","resData","loader","request","params","defer","account","action","method","redirect","useRouteLoaderData","Suspense","fallback","type","className","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","Await","resolve","loadedAccount","title"],"sourceRoot":""}