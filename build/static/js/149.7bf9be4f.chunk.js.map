{"version":3,"file":"static/js/149.7bf9be4f.chunk.js","mappings":"wPA6CA,MAzCA,SAAoC,GAAoB,IAAnBA,EAAe,EAAfA,gBACjC,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAClBC,GAAaC,EAAAA,EAAAA,iBAEZC,GAASC,EAAAA,EAAAA,oBAAmB,sBAA5BD,MAEDE,EAA8B,eAAfJ,EAUvB,OACE,SAAC,WAAc,WACb,UAAC,KAAI,CAACK,UAAU,SAASC,KAAK,SAASC,SAPzC,SAAkBC,GACdA,EAAMC,iBACNb,EAAgBE,EACpB,EAI6DY,OAAO,OAAM,WACtE,kBACEL,UAAU,oBACVM,KAAK,WACLC,YAAY,cACZ,aAAW,SACXC,KAAK,iBACLC,SAlBN,SAAkBN,GACdT,EAAUS,EAAMO,OAAOC,MAC3B,EAiBMA,MAAOlB,KAET,qBAAUmB,GAAG,WAAU,SACpBf,EAAMgB,KAAI,SAACC,GAAI,OACd,mBAAsBH,MAAOG,EAAKC,WAArBD,EAAKF,GAA6B,OAGnD,SAAC,EAAAI,OAAM,CAAEC,KAAK,SAASC,SAAUnB,EAAa,SAAC,eAMvD,ECdA,MA3BA,SAA0C,GAAe,IAAboB,EAAQ,EAARA,SAC1C,OACE,SAAC,WAAc,WACb,mBAAOnB,UAAU,mBAAkB,WACnC,4BACF,2BACE,eAAIoB,MAAM,MAAK,SAAC,oBAChB,eAAIA,MAAM,MAAK,SAAC,eAChB,eAAIA,MAAM,MAAK,SAAC,mBAChB,eAAIA,MAAM,MAAK,SAAC,iBAJTD,EAASE,WAOpB,2BACGF,EAASN,KAAI,SAACS,GAAO,OAClB,2BACA,eAAIF,MAAM,MAAK,SAAEE,EAAQD,UACzB,wBAAKC,EAAQP,aACb,wBAAKO,EAAQC,YACb,wBAAKD,EAAQX,UAJJW,EAAQD,OAKd,UAMX,E,WCcA,MAnCA,WACE,OAAgC7B,EAAAA,EAAAA,UAAS,IAAG,eAArC2B,EAAQ,KAAEK,EAAW,KACE,aAmB7B,OAnB6B,0BAA9B,WAA+BC,GAAU,gFACX,OAAtBC,GAAQC,EAAAA,EAAAA,MAAe,EAAD,OACLC,MAAM,kEAAoEH,EAAY,CAC3GpB,OAAQ,MACRwB,QAAS,CACPC,cAAe,UAAYJ,EAC3B,8BAA+B,OAEhC,KAAD,EANY,IAARK,EAAQ,QAQAC,GAAG,CAAD,eACgD,OAA9DC,OAAOC,MAAM,iDAAiD,mBACvDC,EAAAA,EAAAA,UAAS,OAAK,uBAGDJ,EAASK,OAAO,KAAD,EAEf,OAFhBC,EAAO,OACbb,EAAYa,EAAQlB,UACpBmB,QAAQC,IAAIpB,GAAU,kBACfA,GAAQ,6CAChB,sBACD,OACE,UAAC,WAAc,YACb,SAAC,EAA0B,CACzB5B,gBAxBuC,SACd,GAAD,gCAwBxBS,UAAU,2BAEXmB,EAASqB,OAAS,IACjB,SAAC,EAAgC,CAACrB,SAAUA,MAIpD,C","sources":["components/InventoryBalancesComponents/InventoryBalanceSearchForm.js","components/InventoryBalancesComponents/InventoryBalanceSearchResultList.js","pages/InventoryBalancePage/InventoryBalanceSearchPage.js"],"sourcesContent":["import { Form, useNavigation, useRouteLoaderData } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-tailwind/react\";\r\n\r\nfunction InventoryBalanceSearchForm({onSearchHandler}) {\r\n    const [search, setSearch] = useState(\"\")\r\n    const navigation = useNavigation()\r\n\r\n    const {items} = useRouteLoaderData(\"inventory-balances\")\r\n\r\n    const isSubmitting = navigation === \"submitting\"\r\n    function onSearch(event){\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    function onSubmit(event){\r\n        event.preventDefault()\r\n        onSearchHandler(search)\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form className=\"d-flex\" role=\"search\" onSubmit={onSubmit} method=\"post\">\r\n        <input\r\n          className=\"form-control me-2\"\r\n          list=\"options2\"\r\n          placeholder=\"Search item\"\r\n          aria-label=\"Search\"\r\n          name=\"search-balance\"\r\n          onChange={onSearch}\r\n          value={search}\r\n        />\r\n        <datalist id=\"options2\">\r\n          {items.map((item) => (\r\n            <option key={item.id} value={item.item_name} />\r\n          ))}\r\n        </datalist>\r\n        <Button  type=\"submit\" disabled={isSubmitting}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default InventoryBalanceSearchForm;\r\n","import React from \"react\";\r\n\r\nfunction InventoryBalanceSearchResultList({ balances }) {\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table table-info\">\r\n      <thead>\r\n    <tr key={balances.number}>\r\n      <th scope=\"col\">Balance Number</th>\r\n      <th scope=\"col\">Item Name</th>\r\n      <th scope=\"col\">Item Quantity</th>\r\n      <th scope=\"col\">Item Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {balances.map((balance)=>(\r\n        <tr key={balance.number}>\r\n        <th scope=\"row\">{balance.number}</th>\r\n        <td>{balance.item_name}</td>\r\n        <td>{balance.quantity}</td>\r\n        <td>{balance.value}</td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default InventoryBalanceSearchResultList;\r\n","import React, { useState } from \"react\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport InventoryBalanceSearchForm from \"../../components/InventoryBalancesComponents/InventoryBalanceSearchForm\";\r\nimport InventoryBalanceSearchResultList from \"../../components/InventoryBalancesComponents/InventoryBalanceSearchResultList\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction InventoryBalanceSearchPage() {\r\n  const [balances, setBalances] = useState(\"\");\r\n  async function onSearchHandler(searchItem) {\r\n    const token = getAuthToken();\r\n    const response = await fetch(\"https://flask-inventory.onrender.com/balance/search/?item_name=\" + searchItem, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      window.alert(\"This item does not exist. Please select again\");\r\n      return redirect(\"./\");\r\n    }\r\n\r\n    const resData = await response.json();\r\n    setBalances(resData.balances);\r\n    console.log(balances);\r\n    return balances;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <InventoryBalanceSearchForm\r\n        onSearchHandler={onSearchHandler}\r\n        className=\"justify-content-center\"\r\n      ></InventoryBalanceSearchForm>\r\n      {balances.length > 0 && (\r\n        <InventoryBalanceSearchResultList balances={balances} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default InventoryBalanceSearchPage;\r\n"],"names":["onSearchHandler","useState","search","setSearch","navigation","useNavigation","items","useRouteLoaderData","isSubmitting","className","role","onSubmit","event","preventDefault","method","list","placeholder","name","onChange","target","value","id","map","item","item_name","Button","type","disabled","balances","scope","number","balance","quantity","setBalances","searchItem","token","getAuthToken","fetch","headers","Authorization","response","ok","window","alert","redirect","json","resData","console","log","length"],"sourceRoot":""}