{"version":3,"file":"static/js/482.cc21a013.chunk.js","mappings":"iOAuDO,SAAeA,EAAO,GAAD,+BA8BzB,8CA9BI,wGAGkE,OAH1CC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAC9BC,GAAQC,EAAAA,EAAAA,MACRC,EAAKH,EAAOG,GACZC,EAAM,qDAAuDD,EAAG,EAAD,OAElDJ,EAAQM,WAAU,OAIpC,OAJKC,EAAI,OAEJC,EAAW,CACfC,OAAQF,EAAKG,IAAI,WAClB,UACsBC,MAAMN,EAAK,CAChCO,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAYZ,EAC3B,8BAA+B,KAEjCa,KAAMC,KAAKC,UAAUT,KACpB,KAAD,GARY,GAUU,OAVlBU,EAAQ,QAUDC,OAAc,0CAClBD,GAAQ,WAEO,MAApBA,EAASC,OAAc,0CAClBD,GAAQ,WAEZA,EAASE,GAAG,CAAD,sBACRC,EAAAA,EAAAA,MAAK,CAAEC,QAAS,0BAA4B,CAAEH,OAAQ,MAAO,KAAD,6BAE7DI,EAAAA,EAAAA,UAAS,aAAW,6CAC5B,sBAhCH,UAhDA,WACI,IAAMC,GAAUC,EAAAA,EAAAA,oBAAmB,kBAC7BC,GAAaC,EAAAA,EAAAA,iBACbC,GAAWC,EAAAA,EAAAA,eACXtB,GAAOuB,EAAAA,EAAAA,iBAEPC,EAAoC,eAArBL,EAAWM,MAIlC,OACE,SAAC,WAAc,WACX,UAAC,IAAK,WACPzB,GAAQA,EAAK0B,SACZ,wBACGC,OAAOC,OAAO5B,EAAK0B,QAAQG,KAAI,SAACC,GAAG,OAClC,wBAAeA,GAANA,EAAe,MAI7B9B,GAAQA,EAAKe,UAAW,uBAAIf,EAAKe,WAClC,UAAC,EAAAgB,KAAI,CAAC1B,OAAO,OAAM,WACjB,2BAAK,+CAC0C,KAC7C,uBAAIY,EAAQe,iBAAmB,aAAW,KAC1C,yBACGf,EAAQgB,SAAS,IAAEhB,EAAQiB,cAGhC,0BACE,kBAAOC,UAAQ,EAACC,YAAY,cAAcC,KAAK,cAEjD,mBAAQC,UAAU,kBAAkBC,QAzBxC,WACElB,EAAS,KACX,EAuB+D,SAAC,OAElD,KACV,mBACEiB,UAAU,oBACVE,KAAK,SACLC,SAAUjB,EAAa,SAEtBA,EAAe,UAAY,gBAMtC,C","sources":["pages/ReceiptPages/ReceiptVoidPage.js"],"sourcesContent":["import React from 'react'\r\nimport { Form, json, redirect, useActionData, useNavigate, useNavigation, useRouteLoaderData } from 'react-router-dom/dist/umd/react-router-dom.development'\r\nimport Modal from '../../components/UIComponents/Modal';\r\nimport { getAuthToken } from '../../util/Auth';\r\n\r\nfunction ReceiptVoidPage() {\r\n    const receipt = useRouteLoaderData(\"receipt-detail\")\r\n    const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n    const data = useActionData();\r\n  \r\n    const isSubmitting = navigation.state === \"submitting\";\r\n    function cancelHandler() {\r\n      navigate(\"..\");\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n        <Modal>\r\n      {data && data.errors && (\r\n        <ul>\r\n          {Object.values(data.errors).map((err) => (\r\n            <li key={err}>{err}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {data && data.message && <p>{data.message}</p>}\r\n      <Form method=\"post\">\r\n        <div>\r\n          Are you sure you want to void receipt number{\" \"}\r\n          <b>{receipt.receipt_number}</b> of amount{\" \"}\r\n          <b>\r\n            {receipt.currency} {receipt.amount}\r\n          </b>\r\n        </div>\r\n        <div>\r\n          <input required placeholder=\"Void Reason\" name=\"reason\"></input>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={cancelHandler}>\r\n          No\r\n        </button>{\" \"}\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {isSubmitting ? \"Voiding\" : \"Void\"}\r\n        </button>\r\n      </Form>\r\n    </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ReceiptVoidPage\r\n\r\nexport async function action({ request, params }) {\r\n    const token = getAuthToken();\r\n    const id = params.id;\r\n    const url = \"https://flask-inventory.onrender.com/receipt/void/\" + id;\r\n  \r\n    const data = await request.formData()\r\n  \r\n    const voidData = {\r\n      reason: data.get('reason')\r\n    }\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify(voidData)\r\n    });\r\n  \r\n    if (response.status === 400) {\r\n      return response;\r\n    }\r\n    if (response.status === 404) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Failed to void receipt\" }, { status: 500 });\r\n    }\r\n    return redirect(\"/receipt\");\r\n  }"],"names":["action","request","params","token","getAuthToken","id","url","formData","data","voidData","reason","get","fetch","method","headers","Authorization","body","JSON","stringify","response","status","ok","json","message","redirect","receipt","useRouteLoaderData","navigation","useNavigation","navigate","useNavigate","useActionData","isSubmitting","state","errors","Object","values","map","err","Form","receipt_number","currency","amount","required","placeholder","name","className","onClick","type","disabled"],"sourceRoot":""}