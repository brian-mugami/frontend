{"version":3,"file":"static/js/927.edf26e0a.chunk.js","mappings":"kOAsEO,SAAeA,EAAO,GAAD,+BAsB3B,8CAtBM,kGAGuB,OAHCC,EAAM,EAANA,OAAe,EAAPC,QAC/BC,EAAKF,EAAOE,GACR,qBACJC,GAAQC,EAAAA,EAAAA,MAAe,EAAD,OACLC,MAFb,qBAEyBH,EAAK,WAAY,CAClDI,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYL,KAE5B,KAAD,EALY,GAMU,OANlBM,EAAQ,QAMDC,OAAc,yCAClBD,GAAQ,UAEO,MAApBA,EAASC,OAAc,0CAClBD,GAAQ,WAEZA,EAASE,GAAG,CAAD,sBACRC,EAAAA,EAAAA,MAAK,CAAEC,QAAS,yBAA2B,CAAEH,OAAQ,MAAO,KAAD,oBAE7CD,EAASG,OAAO,KAAD,GAChB,OADfE,EAAO,OACbC,QAAQC,IAAIF,GAAS,kBACdA,EAAQG,WAAW,IAAE,6CAC7B,sBAxBD,UA1DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,eACXC,GAAOC,EAAAA,EAAAA,iBAKPJ,GAAaK,EAAAA,EAAAA,iBACnB,OACE,SAAC,WAAc,WACb,UAAC,IAAK,YACJ,eAAIC,UAAU,kDAAiD,SAAC,kBAGhE,eAAGA,UAAU,uCAAsC,UAAC,0CACV,OAEzCH,GAAQA,EAAKI,SACZ,wBACGC,OAAOC,OAAON,EAAKI,QAAQG,KAAI,SAACC,GAAG,OAClC,wBAAeA,GAANA,EAAe,MAI7BR,GAAQA,EAAKP,UAAW,uBAAIO,EAAKP,WAClC,4BACE,eAAGU,UAAU,uCAAsC,UAAC,kBAClC,KAChB,8BACGN,EAAWY,gBACZ,oBAAa,KAAC,qBACd,cAAGN,UAAU,gBAAe,SAAEN,EAAWa,uBAG7C,eAAGP,UAAU,uCAAsC,UAAC,iBACnC,KACf,8BACGN,EAAWc,eACZ,oBAAa,KAAC,oBAAc,KAC5B,eAAGR,UAAU,gBAAe,UAAC,IAAEN,EAAWe,uBAG9C,gBAAKT,UAAU,6CAA4C,UACzD,mBACEU,KAAK,SACLC,QA1CZ,WACEhB,EAAS,oBACX,EAyCYK,UAAU,gDAA+C,SAC1D,oBASb,C","sources":["pages/CustomerPaymentsPage/CustomerPaymentAccountingViewPage.js"],"sourcesContent":["import React from \"react\";\nimport {\n  json,\n  useActionData,\n  useLoaderData,\n  useNavigate,\n} from \"react-router-dom\";\nimport Modal from \"../../components/UIComponents/Modal\";\nimport { getAuthToken } from \"../../util/Auth\";\n\nfunction CustomerPaymentAccountingViewPage() {\n  const navigate = useNavigate();\n  const data = useActionData();\n  function cancelHandler() {\n    navigate(\"/customer-payment\");\n  }\n\n  const accounting = useLoaderData();\n  return (\n    <React.Fragment>\n      <Modal>\n        <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\n          Transactions\n        </h2>\n        <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n          These are the transactions that occured{\" \"}\n        </p>\n        {data && data.errors && (\n          <ul>\n            {Object.values(data.errors).map((err) => (\n              <li key={err}>{err}</li>\n            ))}\n          </ul>\n        )}\n        {data && data.message && <p>{data.message}</p>}\n        <div>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n            Credit Account:{\" \"}\n            <strong>\n              {accounting.credit_account}\n              <span></span> <span></span>\n              <p className=\"font-semibold\">{accounting.credit_amount}</p>\n            </strong>\n          </p>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n            Debit Account:{\" \"}\n            <strong>\n              {accounting.debit_account}\n              <span></span> <span></span>{\" \"}\n              <p className=\"font-semibold\"> {accounting.debit_amount}</p>\n            </strong>\n          </p>\n          <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n            <button\n              type=\"button\"\n              onClick={cancelHandler}\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default CustomerPaymentAccountingViewPage;\n\nexport async function loader({ params, request }) {\n  const id = params.id;\n  let url = \"/customer/payment/\";\n  const token = getAuthToken();\n  const response = await fetch(url + id + \"/account\", {\n    method: \"get\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  });\n  if (response.status === 404) {\n    return response;\n  }\n  if (response.status === 400) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({ message: \"Not gotten accounting\" }, { status: 404 });\n  }\n  const resData = await response.json();\n  console.log(resData);\n  return resData.accounting[0];\n}\n"],"names":["loader","params","request","id","token","getAuthToken","fetch","method","headers","Authorization","response","status","ok","json","message","resData","console","log","accounting","navigate","useNavigate","data","useActionData","useLoaderData","className","errors","Object","values","map","err","credit_account","credit_amount","debit_account","debit_amount","type","onClick"],"sourceRoot":""}