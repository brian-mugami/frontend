{"version":3,"file":"static/js/2287.0ebe7174.chunk.js","mappings":"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","sources":["components/UserComponents/NewUserForm.js","pages/UserPages/EditUser.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  useActionData,\r\n  useNavigation,\r\n  Form,\r\n  json,\r\n  redirect,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\nimport { userTypes } from \"../../data/paymentTypes\";\r\n\r\nfunction NewUserForm({ user, method }) {\r\n  const data = useActionData();\r\n  const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const handleOptionChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n\r\n  function cancelHandler() {\r\n    navigate(\"/user\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"p-5\">\r\n      {data && data.errors && (\r\n        <ul>\r\n          {Object.values(data.errors).map((err) => (\r\n            <li key={err}>{err}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {data && data.message && <p>{data.message}</p>}\r\n        <Form method={method}>\r\n          {isSubmitting && <p>Submitting...</p>}\r\n          <label className=\"block text-sm my-2 font-medium leading-6 text-gray-900\">\r\n            First name\r\n          </label>\r\n          <input\r\n            id=\"fname\"\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            required\r\n            defaultValue={user ? user.first_name : \"\"}\r\n            className=\"block w-1/2 rounded-md border-0 py-1.5 text-gray-900  ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          ></input>\r\n          <label className=\"block text-sm my-2 font-medium leading-6 text-gray-900\">\r\n            Last name\r\n          </label>\r\n          <input\r\n            id=\"lname\"\r\n            type=\"text\"\r\n            name=\"lname\"\r\n            required\r\n            defaultValue={user ? user.last_name : \"\"}\r\n            className=\"block w-1/2 rounded-md border-0 py-1.5 text-gray-900  ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          ></input>\r\n          <label className=\"block text-sm my-2 font-medium leading-6 text-gray-900\">\r\n            email\r\n          </label>\r\n          <input\r\n            id=\"fname\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            defaultValue={user ? user.email : \"\"}\r\n            className=\"block w-3/4 rounded-md border-0 py-1.5 text-gray-900  ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          ></input>\r\n          <div className=\"sm:col-span-3\">\r\n            <label\r\n              htmlFor=\"password1\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Set password\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"password1\"\r\n                id=\"password1\"\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:col-span-3\">\r\n            <label\r\n              htmlFor=\"password2\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Confirm password\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"password2\"\r\n                required\r\n                id=\"password2\"\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <label className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n              User Type\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <select\r\n                name=\"is-admin\"\r\n                type=\"text\"\r\n                defaultValue={user && user.is_admin === true ? \"Admin\" : \"User\"}\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6\"\r\n              >\r\n                {userTypes.map((type) => (\r\n                  <option key={type.id} value={type.value}>\r\n                    {\" \"}\r\n                    {type.userType}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 flex items-center justify-end gap-x-6 \">\r\n            <button\r\n              type=\"button\"\r\n              onClick={cancelHandler}\r\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white  hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n            >\r\n              {isSubmitting ? \"Saving..\" : \"Save\"}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default NewUserForm;\r\n\r\nexport async function action({ request, params }) {\r\n  const data = await request.formData();\r\n  const method = request.method;\r\n  const token = getAuthToken();\r\n  const id = params.userId;\r\n  const UserData = {\r\n    first_name: data.get(\"fname\"),\r\n    last_name: data.get(\"lname\"),\r\n    email: data.get(\"email\"),\r\n    is_admin: data.get(\"is-admin\"),\r\n    password1: data.get(\"password1\"),\r\n    password2: data.get(\"password2\"),\r\n  };\r\n\r\n  if (method === \"POST\") {\r\n    const response = await fetch(\"/user\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify(UserData),\r\n    });\r\n    if (response.status === 409) {\r\n      return response;\r\n    }\r\n    if (response.status === 417) {\r\n      return response;\r\n    }\r\n    if (response.status === 400) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Could not create user\" }, { status: 500 });\r\n    }\r\n\r\n    return redirect(\"/user\");\r\n  } else if (method===\"PATCH\"){\r\n    const response = await fetch(\"/user/\" + id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify(UserData),\r\n    });\r\n    if (response.status === 409) {\r\n      return response;\r\n    }\r\n    if (response.status === 417) {\r\n      return response;\r\n    }\r\n    if (response.status === 400) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Could not update user\" }, { status: 500 });\r\n    }\r\n\r\n    return redirect(\"/user\");\r\n  }\r\n}\r\n","import { useRouteLoaderData } from \"react-router-dom\";\r\nimport NewUserForm from \"../../components/UserComponents/NewUserForm\";\r\n\r\n\r\nfunction EditUserPage(){\r\n    const data = useRouteLoaderData('user-detail')\r\n    return <NewUserForm user={data} method=\"patch\"/>\r\n}\r\n\r\nexport default EditUserPage;"],"names":["action","request","params","formData","data","method","token","getAuthToken","id","userId","UserData","first_name","get","last_name","email","is_admin","password1","password2","fetch","headers","Authorization","body","JSON","stringify","response","status","ok","json","message","redirect","user","useActionData","navigation","useNavigation","navigate","useNavigate","useState","isSubmitting","state","className","errors","Object","values","map","err","type","name","required","defaultValue","htmlFor","userTypes","value","userType","onClick","disabled","useRouteLoaderData"],"sourceRoot":""}