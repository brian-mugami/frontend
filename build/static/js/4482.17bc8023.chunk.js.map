{"version":3,"file":"static/js/4482.17bc8023.chunk.js","mappings":"kOAmEO,SAAeA,EAAO,GAAD,+BA8BzB,8CA9BI,wGAG8B,OAHNC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAC9BC,GAAQC,EAAAA,EAAAA,gBACRC,EAAKH,EAAOG,GACZC,EAAM,iBAAmBD,EAAG,EAAD,OAEdJ,EAAQM,WAAU,OAIpC,OAJKC,EAAI,OAEJC,EAAW,CACfC,OAAQF,EAAKG,IAAI,WAClB,UACsBC,MAAMN,EAAK,CAChCO,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAYZ,EAC3B,8BAA+B,KAEjCa,KAAMC,KAAKC,UAAUT,KACpB,KAAD,GARY,GAUU,OAVlBU,EAAQ,QAUDC,OAAc,0CAClBD,GAAQ,WAEO,MAApBA,EAASC,OAAc,0CAClBD,GAAQ,WAEZA,EAASE,GAAG,CAAD,sBACRC,EAAAA,EAAAA,MAAK,CAAEC,QAAS,0BAA4B,CAAEH,OAAQ,MAAO,KAAD,6BAE7DI,EAAAA,EAAAA,UAAS,aAAW,6CAC5B,sBAhCH,UA5DA,WACI,IAAMC,GAAUC,EAAAA,EAAAA,oBAAmB,kBAC7BC,GAAaC,EAAAA,EAAAA,iBACbC,GAAWC,EAAAA,EAAAA,eACXtB,GAAOuB,EAAAA,EAAAA,iBAEPC,EAAoC,eAArBL,EAAWM,MAIlC,OACE,SAAC,WAAc,WACX,UAAC,IAAK,WACPzB,GAAQA,EAAK0B,SACZ,wBACGC,OAAOC,OAAO5B,EAAK0B,QAAQG,KAAI,SAACC,GAAG,OAClC,wBAAeA,GAANA,EAAe,MAI7B9B,GAAQA,EAAKe,UAAW,uBAAIf,EAAKe,WAClC,UAAC,EAAAgB,KAAI,CAAC1B,OAAO,OAAM,WACnB,gBAAK2B,UAAU,OAAM,UACjB,eAAGA,UAAU,uCAAsC,UAAC,+CACP,KAC7C,uBAAIf,EAAQgB,iBAAmB,aAAW,KAC1C,yBACGhB,EAAQiB,SAAS,IAAEjB,EAAQkB,gBAIhC,gBAAKH,UAAU,OAAM,UACnB,kBACEI,UAAQ,EACRC,YAAY,cACZC,KAAK,SACLN,UAAU,oNAGd,iBAAKA,UAAU,YAAW,WACxB,mBACEA,UAAU,kNACVO,KAAK,SACLC,SAAUhB,EAAa,SAEtBA,EAAe,UAAY,UAE9B,mBACEQ,UAAU,gDACVS,QA1CR,WACEpB,EAAS,KACX,EAwC+B,SACxB,WAES,cAMpB,C","sources":["pages/ReceiptPages/ReceiptVoidPage.js"],"sourcesContent":["import React from 'react'\r\nimport { Form, json, redirect, useActionData, useNavigate, useNavigation, useRouteLoaderData } from 'react-router-dom/dist/umd/react-router-dom.development'\r\nimport Modal from '../../components/UIComponents/Modal';\r\nimport { getAuthToken } from '../../util/Auth';\r\n\r\nfunction ReceiptVoidPage() {\r\n    const receipt = useRouteLoaderData(\"receipt-detail\")\r\n    const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n    const data = useActionData();\r\n  \r\n    const isSubmitting = navigation.state === \"submitting\";\r\n    function cancelHandler() {\r\n      navigate(\"..\");\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n        <Modal>\r\n      {data && data.errors && (\r\n        <ul>\r\n          {Object.values(data.errors).map((err) => (\r\n            <li key={err}>{err}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {data && data.message && <p>{data.message}</p>}\r\n      <Form method=\"post\">\r\n      <div className=\"pb-4\">\r\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n          Are you sure you want to void receipt number{\" \"}\r\n          <b>{receipt.receipt_number}</b> of amount{\" \"}\r\n          <b>\r\n            {receipt.currency} {receipt.amount}\r\n          </b>\r\n          </p>\r\n        </div>\r\n        <div className=\"pb-2\">\r\n          <input\r\n            required\r\n            placeholder=\"Void Reason\"\r\n            name=\"reason\"\r\n            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 placeholder:px-4 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"space-x-4\">\r\n          <button\r\n            className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? \"Voiding\" : \"Void\"}\r\n          </button>\r\n          <button\r\n            className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n            onClick={cancelHandler}\r\n          >\r\n            Cancel\r\n          </button>{\" \"}\r\n        </div>\r\n      </Form>\r\n    </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ReceiptVoidPage\r\n\r\nexport async function action({ request, params }) {\r\n    const token = getAuthToken();\r\n    const id = params.id;\r\n    const url = \"/receipt/void/\" + id;\r\n  \r\n    const data = await request.formData()\r\n  \r\n    const voidData = {\r\n      reason: data.get('reason')\r\n    }\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify(voidData)\r\n    });\r\n  \r\n    if (response.status === 400) {\r\n      return response;\r\n    }\r\n    if (response.status === 404) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Failed to void receipt\" }, { status: 500 });\r\n    }\r\n    return redirect(\"/receipt\");\r\n  }"],"names":["action","request","params","token","getAuthToken","id","url","formData","data","voidData","reason","get","fetch","method","headers","Authorization","body","JSON","stringify","response","status","ok","json","message","redirect","receipt","useRouteLoaderData","navigation","useNavigation","navigate","useNavigate","useActionData","isSubmitting","state","errors","Object","values","map","err","Form","className","receipt_number","currency","amount","required","placeholder","name","type","disabled","onClick"],"sourceRoot":""}