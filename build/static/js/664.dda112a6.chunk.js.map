{"version":3,"file":"static/js/664.dda112a6.chunk.js","mappings":"uQA2ByC,SAExBA,EAAY,GAAD,4CAgBzB,OAhByB,0BAA1B,WAA2BC,GAAE,gFACC,OAAtBC,GAAQC,EAAAA,EAAAA,MAAe,EAAD,OACLC,MAAM,iCAAmCH,EAAI,CAClEI,QAAS,CACPC,cAAe,UAAYJ,KAE5B,KAAD,EAJY,IAARK,EAAQ,QAKAC,GAAG,CAAD,qBACRC,EAAAA,EAAAA,MACJ,CAAEC,QAAS,gDACX,CAAEC,OAAQ,MACV,KAAD,mBAEqBJ,EAASE,OAAO,KAAD,GAAxB,OAAPG,EAAO,yBACNA,GAAO,6CAEjB,sBAEM,SAAeC,EAAO,GAAD,+BAK3B,8CALM,4FAEO,OAFwB,EAAPC,QAASC,EAAM,EAANA,OAChCd,EAAKc,EAAOd,GAAG,EAAD,GACbe,EAAAA,MAAK,SACKhB,EAAYC,GAAG,OAAvB,OAAuB,kBAA9BgB,QAAQ,EAAD,kFAEV,sBAEM,SAAeC,EAAO,GAAD,+BAkB3B,8CAlBM,gGAEe,OAFSJ,EAAO,EAAPA,QAASC,EAAM,EAANA,OAChCb,GAAQC,EAAAA,EAAAA,MACRF,EAAKc,EAAOd,GAAG,EAAD,OACGG,MAAM,iCAAmCH,EAAI,CAClEkB,OAAQL,EAAQK,OAChBd,QAAS,CACPC,cAAe,UAAYJ,KAE5B,KAAD,EALY,UAMAM,GAAG,CAAD,qBACRC,EAAAA,EAAAA,MACJ,CAAEC,QAAS,6BACX,CACEC,OAAQ,MAEV,KAAD,4BAEIS,EAAAA,EAAAA,UAAS,qBAAmB,4CACpC,sBA7CD,UAhBA,WACE,IAAQH,GAAYI,EAAAA,EAAAA,oBAAmB,0BAA/BJ,QAER,OACE,SAAC,WAAc,WACb,SAAC,EAAAK,SAAQ,CAACC,UAAU,cAAGC,MAAO,CAAEC,UAAW,UAAW,SAAC,eAAe,UACpE,SAAC,EAAAC,MAAK,CAACC,QAASV,EAAQ,SACrB,SAACW,GAAa,OACb,SAAC,IAAW,CAACX,QAASW,EAAeC,MAAM,wBAAyB,OAMhF,C","sources":["pages/InventoryAdjustmentAccountPages/InvAdjAccountDetailPage.js"],"sourcesContent":["import {\r\n    Await,\r\n    defer,\r\n    json,\r\n    redirect,\r\n    useRouteLoaderData,\r\n  } from \"react-router-dom\";\r\n  import React, { Suspense } from \"react\";\r\n  import Accountitem from \"../../components/AccountComponents/AccountItem\";\r\n  import { getAuthToken } from \"../../util/Auth\";\r\n  \r\n  function InvAdjAccountDetailPage() {\r\n    const { account } = useRouteLoaderData(\"inv-adj-account-detail\");\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\r\n          <Await resolve={account}>\r\n            {(loadedAccount) => (\r\n              <Accountitem account={loadedAccount} title=\"Inventory Adjustment\" />\r\n            )}\r\n          </Await>\r\n        </Suspense>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  export default InvAdjAccountDetailPage;\r\n  \r\n  async function loadAccount(id) {\r\n    const token = getAuthToken();\r\n    const response = await fetch(\"/inventory-adjustment/account/\" + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw json(\r\n        { message: \"Could not fetch inventory adjustment account\" },\r\n        { status: 500 }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n      return resData;\r\n    }\r\n  }\r\n  \r\n  export async function loader({ request, params }) {\r\n    const id = params.id;\r\n    return defer({\r\n      account: await loadAccount(id),\r\n    });\r\n  }\r\n  \r\n  export async function action({ request, params }) {\r\n    const token = getAuthToken();\r\n    const id = params.id;\r\n    const response = await fetch(\"/inventory-adjustment/account/\" + id, {\r\n      method: request.method,\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw json(\r\n        { message: \"Could not delete account.\" },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    }\r\n    return redirect(\"/account/inv-adj\");\r\n  }"],"names":["loadAccount","id","token","getAuthToken","fetch","headers","Authorization","response","ok","json","message","status","resData","loader","request","params","defer","account","action","method","redirect","useRouteLoaderData","Suspense","fallback","style","textAlign","Await","resolve","loadedAccount","title"],"sourceRoot":""}